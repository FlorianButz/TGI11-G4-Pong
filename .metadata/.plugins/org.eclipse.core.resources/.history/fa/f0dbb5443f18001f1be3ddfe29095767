package de.demoncore.audio;

import org.lwjgl.openal.AL10;

import de.demoncore.game.Settings;
import de.demoncore.game.animator.Easing.EasingType;
import de.demoncore.game.animator.AnimatorUpdateEvent;
import de.demoncore.game.animator.Vector3Animator;
import de.demoncore.utils.Vector3;

public class MusicManager implements OnMusicVolumeChangeListener {

	private int sourceId;
	private float volume;
	
	private AudioClip activeMusic;
	
	public void InitializeMusicManager() {
		sourceId = AL10.alGenSources();

		AL10.alSourcef(sourceId, AL10.AL_PITCH, 1f);
		AL10.alSource3f(sourceId, AL10.AL_POSITION, 0, 0, 0);
		SetVolume(1f);

		AudioMaster.AddOnMusicVolumeChangeListener(this);
	}
	
	public void PlayMusic(AudioClip musicClip) {
		float originalVolume = this.volume;
		
		if(activeMusic != null) {
			
			Vector3Animator volumeAnim = new Vector3Animator(Vector3.one().multiply(originalVolume), Vector3.zero(), 0.5f, EasingType.InOutQuint);
			volumeAnim.SetOnUpdate(new AnimatorUpdateEvent() {
			@Override
			public void OnUpdate(Vector3 value) {
				super.OnUpdate(value);
				AL10.alSourcef(sourceId, AL10.AL_GAIN, value.x);
			}
			});
			
		}
	}
	
	public void SetVolume(float volume) {
		this.volume = volume * Settings.GetVolume();
		AL10.alSourcef(sourceId, AL10.AL_GAIN, this.volume);
	}

	public void SetRealVolume(float volume) {
		this.volume = volume;
		AL10.alSourcef(sourceId, AL10.AL_GAIN, this.volume);
	}
	
	@Override
	public void OnMusicVolumeChange(float volume) {
		SetRealVolume(volume);
	}

}
